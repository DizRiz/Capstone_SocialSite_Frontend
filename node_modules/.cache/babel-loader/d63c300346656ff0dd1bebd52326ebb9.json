{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdfar\\\\Capstone\\\\frontend\\\\src\\\\components\\\\post\\\\Post.jsx\",\n    _s = $RefreshSig$();\n\nimport \"./post.scss\";\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\nimport { Link } from \"react-router-dom\";\nimport Comments from \"../Comments/Comments\";\nimport { useContext, useState } from \"react\";\nimport moment from \"moment\";\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\nimport { makeRequest } from \"../../axios\";\nimport { AuthContext } from \"../../context/authContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    post\n  } = _ref;\n  const [commentOpen, setCommentOpen] = useState(false);\n  const [menuOpen, setMenuOpen] = useState(false);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const queryClient = useQueryClient(); //check if post is liked\n\n  const {\n    isLoading,\n    data\n  } = useQuery([\"likes\", post.id], () => makeRequest.get(\"/likes?postId=\" + post.id).then(res => {\n    return res.data;\n  }));\n  const {\n    isLoading: cIsLoading,\n    data: commentData\n  } = useQuery([\"comments\", post.id], () => makeRequest.get(\"/comments?postId=\" + post.id).then(res => {\n    return res.data;\n  })); //like and unlike post\n\n  const mutation = useMutation(liked => {\n    if (liked) return makeRequest.delete(\"/likes?postId=\" + post.id);\n    return makeRequest.post(\"/likes\", {\n      postId: post.id\n    });\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"likes\"]);\n      refetch(data);\n    }\n  }); //delete post\n\n  const deleteMutation = useMutation(postId => {\n    return makeRequest.delete(\"/posts/\" + postId);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"posts\"]);\n    }\n  });\n\n  const handleLike = () => {\n    mutation.mutate(data.includes(currentUser.id));\n  };\n\n  const handleDelete = () => {\n    deleteMutation.mutate(post.id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"userInfo\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.profilePic,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"details\",\n            children: [/*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${post.userId}`,\n              style: {\n                textDecoration: \"none\",\n                color: \"inherit\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"name\",\n                children: post.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date\",\n              children: moment(post.createdAt).fromNow()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoreHorizIcon, {\n          onClick: () => setMenuOpen(!menuOpen)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), menuOpen && post.userId === currentUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: post.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"./upload/\" + post.img,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [isLoading ? \"loading\" : data.includes(currentUser.id) ? /*#__PURE__*/_jsxDEV(FavoriteOutlinedIcon, {\n            style: {\n              color: \"red\"\n            },\n            onClick: handleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(FavoriteBorderOutlinedIcon, {\n            onClick: handleLike\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), data === null || data === void 0 ? void 0 : data.length, \" Likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          onClick: () => setCommentOpen(!commentOpen),\n          children: [cIsLoading ? \"loading\" : /*#__PURE__*/_jsxDEV(TextsmsOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 39\n          }, this), commentData === null || commentData === void 0 ? void 0 : commentData.length, \" Comments\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"item\",\n          children: [/*#__PURE__*/_jsxDEV(ShareOutlinedIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), \"Share\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), commentOpen && /*#__PURE__*/_jsxDEV(Comments, {\n        postId: post.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"EOdktxC7+NB3kc/qAM6EXkXxZ/Y=\", false, function () {\n  return [useQueryClient, useQuery, useQuery, useMutation, useMutation];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/mdfar/Capstone/frontend/src/components/post/Post.jsx"],"names":["FavoriteBorderOutlinedIcon","FavoriteOutlinedIcon","TextsmsOutlinedIcon","ShareOutlinedIcon","MoreHorizIcon","Link","Comments","useContext","useState","moment","useMutation","useQuery","useQueryClient","makeRequest","AuthContext","Post","post","commentOpen","setCommentOpen","menuOpen","setMenuOpen","currentUser","queryClient","isLoading","data","id","get","then","res","cIsLoading","commentData","mutation","liked","delete","postId","onSuccess","invalidateQueries","refetch","deleteMutation","handleLike","mutate","includes","handleDelete","profilePic","userId","textDecoration","color","name","createdAt","fromNow","description","img","length"],"mappings":"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","sourcesContent":["import \"./post.scss\";\r\nimport FavoriteBorderOutlinedIcon from \"@mui/icons-material/FavoriteBorderOutlined\";\r\nimport FavoriteOutlinedIcon from \"@mui/icons-material/FavoriteOutlined\";\r\nimport TextsmsOutlinedIcon from \"@mui/icons-material/TextsmsOutlined\";\r\nimport ShareOutlinedIcon from \"@mui/icons-material/ShareOutlined\";\r\nimport MoreHorizIcon from \"@mui/icons-material/MoreHoriz\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Comments from \"../Comments/Comments\";\r\nimport { useContext, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { useMutation, useQuery, useQueryClient } from \"@tanstack/react-query\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport { AuthContext } from \"../../context/authContext\";\r\n\r\nconst Post = ({ post }) => {\r\n  const [commentOpen, setCommentOpen] = useState(false);\r\n  const [menuOpen, setMenuOpen] = useState(false);\r\n\r\n  const { currentUser } = useContext(AuthContext);\r\n  const queryClient = useQueryClient();\r\n\r\n  //check if post is liked\r\n  const { isLoading, data } = useQuery([\"likes\", post.id], () =>\r\n    makeRequest.get(\"/likes?postId=\" + post.id).then((res) => {\r\n      return res.data;\r\n    })\r\n  );\r\n\r\n  const { isLoading: cIsLoading, data: commentData } = useQuery(\r\n    [\"comments\", post.id],\r\n    () =>\r\n      makeRequest.get(\"/comments?postId=\" + post.id).then((res) => {\r\n        return res.data;\r\n      })\r\n  );\r\n\r\n  //like and unlike post\r\n  const mutation = useMutation(\r\n    (liked) => {\r\n      if (liked) return makeRequest.delete(\"/likes?postId=\" + post.id);\r\n      return makeRequest.post(\"/likes\", { postId: post.id });\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries([\"likes\"]);\r\n        refetch(data);\r\n      },\r\n    }\r\n  );\r\n\r\n  //delete post\r\n  const deleteMutation = useMutation(\r\n    (postId) => {\r\n      return makeRequest.delete(\"/posts/\" + postId);\r\n    },\r\n    {\r\n      onSuccess: () => {\r\n        // Invalidate and refetch\r\n        queryClient.invalidateQueries([\"posts\"]);\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleLike = () => {\r\n    mutation.mutate(data.includes(currentUser.id));\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    deleteMutation.mutate(post.id);\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"post\">\r\n      <div className=\"container\">\r\n        <div className=\"user\">\r\n          <div className=\"userInfo\">\r\n            <img src={post.profilePic} alt=\"\" />\r\n            <div className=\"details\">\r\n              <Link\r\n                to={`/profile/${post.userId}`}\r\n                style={{ textDecoration: \"none\", color: \"inherit\" }}\r\n              >\r\n                <span className=\"name\">{post.name}</span>\r\n              </Link>\r\n              <span className=\"date\">{moment(post.createdAt).fromNow()}</span>\r\n            </div>\r\n          </div>\r\n          <MoreHorizIcon onClick={() => setMenuOpen(!menuOpen)} />\r\n          {menuOpen && post.userId === currentUser.id && (\r\n            <button onClick={handleDelete}>Delete</button>\r\n          )}\r\n        </div>\r\n        <div className=\"content\">\r\n          <p>{post.description}</p>\r\n          <img src={\"./upload/\" + post.img} alt=\"\" />\r\n        </div>\r\n        <div className=\"info\">\r\n          <div className=\"item\">\r\n            {isLoading ? (\r\n              \"loading\"\r\n            ) : data.includes(currentUser.id) ? (\r\n              <FavoriteOutlinedIcon\r\n                style={{ color: \"red\" }}\r\n                onClick={handleLike}\r\n              />\r\n            ) : (\r\n              <FavoriteBorderOutlinedIcon onClick={handleLike} />\r\n            )}\r\n            {data?.length} Likes\r\n          </div>\r\n          <div className=\"item\" onClick={() => setCommentOpen(!commentOpen)}>\r\n            {cIsLoading ? \"loading\" : <TextsmsOutlinedIcon />}\r\n            {commentData?.length} Comments\r\n          </div>\r\n          <div className=\"item\">\r\n            <ShareOutlinedIcon />\r\n            Share\r\n          </div>\r\n        </div>\r\n        {commentOpen && <Comments postId={post.id} />}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}