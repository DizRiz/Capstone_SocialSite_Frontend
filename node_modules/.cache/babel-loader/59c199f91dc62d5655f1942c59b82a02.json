{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdfar\\\\Capstone\\\\frontend\\\\src\\\\components\\\\update\\\\Update.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./update.scss\";\nimport { makeRequest } from \"../../axios\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Update = _ref => {\n  _s();\n\n  let {\n    setOpenUpdate,\n    user\n  } = _ref;\n  const [cover, setCover] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [text, setTexts] = useState({\n    name: \"\",\n    city: \"\",\n    website: \"\"\n  });\n\n  const upload = async file => {\n    try {\n      const formData = new FormData();\n      formData.append(\"file\", file);\n      const res = await makeRequest.post(\"/upload\", formData);\n      return res.data;\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const handleChange = e => {\n    setTexts(prev => ({ ...prev,\n      [e.target.name]: [e.target.value]\n    }));\n  };\n\n  const queryClient = useQueryClient();\n  const mutation = useMutation(user => {\n    return makeRequest.put(\"/users\", user);\n  }, {\n    onSuccess: () => {\n      // Invalidate and refetch\n      queryClient.invalidateQueries([\"user\"]);\n    }\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    let coverUrl = user.coverPic;\n    let profileUrl = user.profilePic;\n    coverUrl = cover && (await upload(cover));\n    profileUrl = profile && (await upload(profile));\n    mutation.mutate({ ...texts,\n      coverPic: coverUrl\n    });\n    setDesc(\"\");\n    setFile(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"update\",\n    children: [\"Update\", /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"city\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"website\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSubmit,\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOpenUpdate(false),\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Update, \"gIKihvRgrpwe0moXU+jkZGkjOxY=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n\n_c = Update;\nexport default Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"sources":["C:/Users/mdfar/Capstone/frontend/src/components/update/Update.jsx"],"names":["useState","makeRequest","useMutation","useQueryClient","Update","setOpenUpdate","user","cover","setCover","profile","setProfile","text","setTexts","name","city","website","upload","file","formData","FormData","append","res","post","data","err","console","log","handleChange","e","prev","target","value","queryClient","mutation","put","onSuccess","invalidateQueries","handleSubmit","preventDefault","coverUrl","coverPic","profileUrl","profilePic","mutate","texts","setDesc","setFile"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport \"./update.scss\";\r\nimport { makeRequest } from \"../../axios\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\n\r\n\r\nconst Update = ({ setOpenUpdate, user }) => {\r\n  const [cover, setCover] = useState(null);\r\n  const [profile, setProfile] = useState(null);\r\n  const [text, setTexts] = useState({\r\n    name: \"\",\r\n    city: \"\",\r\n    website: \"\",\r\n  });\r\n\r\n  const upload = async (file) => {\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append(\"file\", file);\r\n      const res = await makeRequest.post(\"/upload\", formData);\r\n      return res.data;\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setTexts((prev) => ({ ...prev, [e.target.name]: [e.target.value] }));\r\n    };\r\n    \r\n    const queryClient = useQueryClient();\r\n\r\n    const mutation = useMutation(\r\n      (user) => {\r\n        return makeRequest.put(\"/users\", user);\r\n      },\r\n      {\r\n        onSuccess: () => {\r\n          // Invalidate and refetch\r\n          queryClient.invalidateQueries([\"user\"]);\r\n        },\r\n      }\r\n    );\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        let coverUrl = user.coverPic;\r\n        let profileUrl = user.profilePic;\r\n\r\n        coverUrl = cover && await upload(cover)\r\n        profileUrl = profile && await upload(profile)\r\n\r\n        mutation.mutate({ ...texts, coverPic: coverUrl,  });\r\n        setDesc(\"\");\r\n        setFile(null);\r\n      };\r\n    \r\n  \r\n  return (\r\n    <div className=\"update\">\r\n      Update\r\n      <form>\r\n        <input type=\"file\" />\r\n        <input type=\"file\" />\r\n        <input type=\"text\" name=\"name\" onChange={handleChange} />\r\n        <input type=\"text\" name=\"city\" onChange={handleChange} />\r\n              <input type=\"text\" name=\"website\" onChange={handleChange} />\r\n              <button onClick={handleSubmit}>Update</button>\r\n      </form>\r\n      <button onClick={() => setOpenUpdate(false)}>X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Update;\r\n"]},"metadata":{},"sourceType":"module"}