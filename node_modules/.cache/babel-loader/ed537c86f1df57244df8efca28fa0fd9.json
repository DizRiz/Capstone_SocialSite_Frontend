{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mdfar\\\\Capstone\\\\frontend\\\\src\\\\components\\\\posts\\\\Posts.jsx\",\n    _s = $RefreshSig$();\n\nimport Post from \"../post/Post\";\nimport \"./posts.scss\";\nimport { useQuery } from 'react-query';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = () => {\n  _s();\n\n  const {\n    isLoading,\n    error,\n    data\n  } = useQuery('repoData', () => fetch('https://api.github.com/repos/tannerlinsley/react-query').then(res => res.json()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts\",\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Post, {\n      post: post\n    }, post.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"P7jBIA24rc00P7RvfXjpVl6dqRI=\", false, function () {\n  return [useQuery];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/mdfar/Capstone/frontend/src/components/posts/Posts.jsx"],"names":["Post","useQuery","Posts","isLoading","error","data","fetch","then","res","json","posts","map","post","id"],"mappings":";;;AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAO,cAAP;AACA,SAASC,QAAT,QAAyB,aAAzB;;;AAGA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,KAAb;AAAoBC,IAAAA;AAApB,MAA6BJ,QAAQ,CAAC,UAAD,EAAa,MACxDK,KAAK,CAAC,wDAAD,CAAL,CAAgEC,IAAhE,CAAqEC,GAAG,IACtEA,GAAG,CAACC,IAAJ,EADF,CAD2C,CAA3C;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,cACGC,KAAK,CAACC,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEA;AAAZ,OAAuBA,IAAI,CAACC,EAA5B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CAdD;;GAAMX,K;UAC+BD,Q;;;KAD/BC,K;AAgBN,eAAeA,KAAf","sourcesContent":["import Post from \"../post/Post\";\r\nimport \"./posts.scss\";\r\nimport { useQuery } from 'react-query'\r\n\r\n\r\nconst Posts = () => {\r\n  const { isLoading, error, data } = useQuery('repoData', () =>\r\n  fetch('https://api.github.com/repos/tannerlinsley/react-query').then(res =>\r\n    res.json()\r\n  )\r\n)\r\n\r\n  return (\r\n    <div className=\"posts\">\r\n      {posts.map((post) => (\r\n        <Post post={post} key={post.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}